<section class="register-page">

	<div class="container">

		<div class="register-form-section">
			<div class="register-content animated bounceIn">
				<%= form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :class => 'custom-form' }) do |f| %>

					<div class="section-title">
						<h3>Register your Account here</h3>
					</div>

					<div class="textbox-wrap">
						<div class="input-group">
							<span class="input-group-addon">
								<i class="material-icons">mail</i>
							</span>

							<%= f.email_field :email, :class => 'form-control', :placeholder => 'Email' %>
						</div>
					</div>

					<div class="textbox-wrap">
						<div class="input-group">
							<span class="input-group-addon">
								<i class="material-icons">face</i>
							</span>

							<%= f.text_field :username, :class => 'form-control', :placeholder => 'Username' %>
						</div>
					</div>

					<div class="textbox-wrap">
						<div class="input-group">
							<span class="input-group-addon">
								<i class="material-icons">vpn_key</i>
							</span>

							<%= f.password_field :password, :class => 'form-control', :placeholder => 'Password' %>
						</div>
						<div class="input-group">
							<span class="input-group-addon">
								<i class="material-icons">vpn_key</i>
							</span>

							<%= f.password_field :password_confirmation, :class => 'form-control', :placeholder => 'Retype password' %>
						</div>
					</div>

					<div class="register-form-action clearfix">
						<%= f.submit 'Register Now', :class => 'md-button md-accent pull-right' %>
					</div>

				<% end %>
			</div>
			<div class="register-form-links animated fadeInRightBig">
				<h4 class="text-blue">Already have an Account</h4>
				<%= link_to 'Click here', new_user_session_path, :class => 'navi-link' %>
				<span> to Login</span>
			</div>
		</div>

	</div>

</section>

<%= javascript_tag do %>

	function hasClass(el, className) {
	  if (el.classList) {
			return el.classList.contains(className)
		} else {
			return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'))
		}
	}

	function addClass(el, className) {
	  if (el.classList) {
			el.classList.add(className)
		} else {
			if (!hasClass(el, className)) {
				el.className += " " + className
			}
		}
	}

	function removeClass(el, className) {
	  if (el.classList) {
			el.classList.remove(className)
		} else {
			if (hasClass(el, className)) {
		    var reg = new RegExp('(\\s|^)' + className + '(\\s|$)')
		    el.className=el.className.replace(reg, ' ')
		  }
		}
	}

	var cback = function () {
		var elForm = document.querySelectorAll('.custom-form .form-control');
		elForm.forEach(function (el) {
			el.addEventListener('focus', function () {
				var elParent = this.parentElement.parentElement;
				addClass(elParent, 'focused');
			});

			el.addEventListener('blur', function () {
				var elParent = this.parentElement.parentElement;
				removeClass(elParent, 'focused');
			});

		});
	};

	if (document.readyState === 'complete' || (document.readyState !== "loading" && !document.documentElement.doScroll)) {
		cback();
	} else {
		document.addEventListener("DOMContentLoaded", cback);
	}

<% end %>
